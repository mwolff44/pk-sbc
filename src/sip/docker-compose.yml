# Copyright: (c) 2007-2025 Mathias WOLFF (mathias@celea.org)
# GNU Affero General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/agpl-3.0.txt)
# SPDX-License-Identifier: AGPL-3.0-or-later

version: "3"

services:
  pks-sip:
    container_name: pks-sip
    hostname: sip.pks.local
    image: mwolff44w/pks-sipproxy:v4.2.0
    restart: unless-stopped
    volumes:
      - pks-db-data:/etc/kamailio/db:ro
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    environment:
      ENVIRONMENT: ${ENVIRONMENT:-dev}
      LISTEN_ADVERTISE: ${LISTEN_ADVERTISE}
      KAMAILIO_LOG_LEVEL: ${KAMAILIO_LOG_LEVEL:-info}
      RTPENGINE_URL: ${RTPENGINE_URL:-rtp.pks.local}
      REDIS_URL: ${REDIS_URL:-redis.pks.local}
      ALIAS: ${ALIAS:-sip.pks.local}
      DB: ${DB:-}
      DB_URL: ${DB_URL:-}
      DB_MYSQL: ${DB_MYSQL:-}
      DB_SQLITE: ${DB_SQLITE:-}
      DB_PGSQL: ${DB_PGSQL:-}
      LOCAL_IP: ${LOCAL_IP}
      SIP_DOMAIN_KEEPALIVE: ${SIP_DOMAIN_KEEPALIVE:-proxy@pks}
      NOT_PROBING: ${NOT_PROBING:-true}
    depends_on:
      pks-redis:
        condition: service_started
      pks-rtp:
        condition: service_started
      pks-db:
        condition: service_healthy
    expose:
      - "5060/udp"
      - "5070/udp"
    network_mode: host

  pks-redis:
    container_name: pks-redis
    hostname: redis.pks.local
    image: redis:7-alpine
    restart: unless-stopped
    expose:
      - "6379"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    network_mode: host
    volumes:
      - pks-redis-data:/data

  pks-rtp:
    container_name: pks-rtp
    hostname: rtp.pks.local
    image: mwolff44w/pks-rtpengine:v1.0.2
    restart: unless-stopped
    privileged: true
    expose:
      - "22222/udp"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    environment:
      BIND_NG_PORT: ${BIND_NG_PORT:-22222}
      PUBLIC_IP: ${PUBLIC_IP}
      LOCAL_IP: ${LOCAL_IP}
      INTERNAL_IP: ${INTERNAL_IP:-}
      PORT_MIN: ${PORT_MIN:-16000}
      PORT_MAX: ${PORT_MAX:-18000}
      LOG_LEVEL: ${LOG_LEVEL:-6}
    network_mode: host

  pks-db:
    container_name: pks-db
    hostname: db.pks.local
    image: postgres:16
    restart: unless-stopped
    volumes:
      - pks-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: pks
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pa55word}
      PGDATA: /var/lib/postgresql/data
    expose:
      - "${POSTGRES_PORT:-5432}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    network_mode: host

  pks-proxy:
    container_name: pks-proxy
    hostname: proxy.pks.local
    image: caddy
    restart: unless-stopped
    volumes:
      - $PWD/Caddyfile:/etc/caddy/Caddyfile
      - pks-caddy-config:/config
      - pks-caddy-data:/data
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    environment:
      domain: ${ADMIN_DOMAIN:-}
    expose:
      - "4433"
    network_mode: host

  pks-admin:
    container_name: pks-admin
    hostname: admin.pks.local
    image: mwolff44w/pks-admin:v1.6.0
    restart: unless-stopped
    depends_on:
      pks-db:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    environment:
      ENVIRONMENT: ${ENVIRONMENT:-dev}
      DB_DSN: ${DB_PGSQL:-postgres://postgres:pa55word@pks-db/pks}
    expose:
      - "4444"
    network_mode: host

networks:
  main:

volumes:
  pks-redis-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/srv/pks/redis'
  pks-db-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/srv/pks/db'
  pks-caddy-config:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/srv/pks/caddy/config'
  pks-caddy-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/srv/pks/caddy/data'
